import numpy as np
from scipy.interpolate import interp1d


def mu_W(E):
    """ Return mass attenuation coefficients for tungsten based on NIST data.

    Parameters
    ----------
    E : ndarray
        Array of energies (units of MV)

    Returns
    -------
    ndarray
        Array of interpolated mass attenuation coefficients
    """
    mu = np.array([[1.00000E-03, 3.683E+03, 3.671E+03],
                   [1.50000E-03, 1.643E+03, 1.632E+03],
                   [1.80920E-03, 1.108E+03, 1.097E+03],
                   [1.80920E-03, 1.327E+03, 1.311E+03],
                   [1.84014E-03, 1.911E+03, 1.883E+03],
                   [1.87160E-03, 2.901E+03, 2.853E+03],
                   [1.87160E-03, 3.170E+03, 3.116E+03],
                   [2.00000E-03, 3.922E+03, 3.853E+03],
                   [2.28100E-03, 2.828E+03, 2.781E+03],
                   [2.28100E-03, 3.279E+03, 3.226E+03],
                   [2.42350E-03, 2.833E+03, 2.786E+03],
                   [2.57490E-03, 2.445E+03, 2.407E+03],
                   [2.57490E-03, 2.599E+03, 2.558E+03],
                   [2.69447E-03, 2.339E+03, 2.301E+03],
                   [2.81960E-03, 2.104E+03, 2.071E+03],
                   [2.81960E-03, 2.194E+03, 2.160E+03],
                   [3.00000E-03, 1.902E+03, 1.873E+03],
                   [4.00000E-03, 9.564E+02, 9.405E+02],
                   [5.00000E-03, 5.534E+02, 5.423E+02],
                   [6.00000E-03, 3.514E+02, 3.428E+02],
                   [8.00000E-03, 1.705E+02, 1.643E+02],
                   [1.00000E-02, 9.691E+01, 9.204E+01],
                   [1.02068E-02, 9.201E+01, 8.724E+01],
                   [1.02068E-02, 2.334E+02, 1.966E+02],
                   [1.08548E-02, 1.983E+02, 1.684E+02],
                   [1.15440E-02, 1.689E+02, 1.444E+02],
                   [1.15440E-02, 2.312E+02, 1.889E+02],
                   [1.18186E-02, 2.268E+02, 1.797E+02],
                   [1.20998E-02, 2.065E+02, 1.699E+02],
                   [1.20998E-02, 2.382E+02, 1.948E+02],
                   [1.50000E-02, 1.389E+02, 1.172E+02],
                   [2.00000E-02, 6.573E+01, 5.697E+01],
                   [3.00000E-02, 2.273E+01, 1.991E+01],
                   [4.00000E-02, 1.067E+01, 9.240E+00],
                   [5.00000E-02, 5.949E+00, 5.050E+00],
                   [6.00000E-02, 3.713E+00, 3.070E+00],
                   [6.95250E-02, 2.552E+00, 2.049E+00],
                   [6.95250E-02, 1.123E+01, 3.212E+00],
                   [8.00000E-02, 7.810E+00, 2.879E+00],
                   [1.00000E-01, 4.438E+00, 2.100E+00],
                   [1.50000E-01, 1.581E+00, 9.378E-01],
                   [2.00000E-01, 7.844E-01, 4.913E-01],
                   [3.00000E-01, 3.238E-01, 1.973E-01],
                   [4.00000E-01, 1.925E-01, 1.100E-01],
                   [5.00000E-01, 1.378E-01, 7.440E-02],
                   [6.00000E-01, 1.093E-01, 5.673E-02],
                   [8.00000E-01, 8.066E-02, 4.028E-02],
                   [1.00000E+00, 6.618E-02, 3.276E-02],
                   [1.25000E+00, 5.577E-02, 2.761E-02],
                   [1.50000E+00, 5.000E-02, 2.484E-02],
                   [2.00000E+00, 4.433E-02, 2.256E-02],
                   [3.00000E+00, 4.075E-02, 2.236E-02],
                   [4.00000E+00, 4.038E-02, 2.363E-02],
                   [5.00000E+00, 4.103E-02, 2.510E-02],
                   [6.00000E+00, 4.210E-02, 2.649E-02],
                   [8.00000E+00, 4.472E-02, 2.886E-02],
                   [1.00000E+01, 4.747E-02, 3.072E-02],
                   [1.50000E+01, 5.384E-02, 3.360E-02],
                   [2.00000E+01, 5.893E-02, 3.475E-02]], dtype=np.float32)
    mu_interp = interp1d(mu[:, 0], mu[:, 1])
    return mu_interp(E)


def mu_Al(E):
    """ Return mass attenuation coefficients for aluminium based on NIST data.

    Parameters
    ----------
    E : ndarray
        Array of energies (units of MV)

    Returns
    -------
    ndarray
        Array of interpolated mass attenuation coefficients
    """
    mu = np.array([[1.00000E-03, 1.185E+03, 1.183E+03],
                   [1.50000E-03, 4.022E+02, 4.001E+02],
                   [1.55960E-03, 3.621E+02, 3.600E+02],
                   [1.55960E-03, 3.957E+03, 3.829E+03],
                   [2.00000E-03, 2.263E+03, 2.204E+03],
                   [3.00000E-03, 7.880E+02, 7.732E+02],
                   [4.00000E-03, 3.605E+02, 3.545E+02],
                   [5.00000E-03, 1.934E+02, 1.902E+02],
                   [6.00000E-03, 1.153E+02, 1.133E+02],
                   [8.00000E-03, 5.033E+01, 4.918E+01],
                   [1.00000E-02, 2.623E+01, 2.543E+01],
                   [1.50000E-02, 7.955E+00, 7.487E+00],
                   [2.00000E-02, 3.441E+00, 3.094E+00],
                   [3.00000E-02, 1.128E+00, 8.778E-01],
                   [4.00000E-02, 5.685E-01, 3.601E-01],
                   [5.00000E-02, 3.681E-01, 1.840E-01],
                   [6.00000E-02, 2.778E-01, 1.099E-01],
                   [8.00000E-02, 2.018E-01, 5.511E-02],
                   [1.00000E-01, 1.704E-01, 3.794E-02],
                   [1.50000E-01, 1.378E-01, 2.827E-02],
                   [2.00000E-01, 1.223E-01, 2.745E-02],
                   [3.00000E-01, 1.042E-01, 2.816E-02],
                   [4.00000E-01, 9.276E-02, 2.862E-02],
                   [5.00000E-01, 8.445E-02, 2.868E-02],
                   [6.00000E-01, 7.802E-02, 2.851E-02],
                   [8.00000E-01, 6.841E-02, 2.778E-02],
                   [1.00000E+00, 6.146E-02, 2.686E-02],
                   [1.25000E+00, 5.496E-02, 2.565E-02],
                   [1.50000E+00, 5.006E-02, 2.451E-02],
                   [2.00000E+00, 4.324E-02, 2.266E-02],
                   [3.00000E+00, 3.541E-02, 2.024E-02],
                   [4.00000E+00, 3.106E-02, 1.882E-02],
                   [5.00000E+00, 2.836E-02, 1.795E-02],
                   [6.00000E+00, 2.655E-02, 1.739E-02],
                   [8.00000E+00, 2.437E-02, 1.678E-02],
                   [1.00000E+01, 2.318E-02, 1.650E-02],
                   [1.50000E+01, 2.195E-02, 1.631E-02],
                   [2.00000E+01, 2.168E-02, 1.633E-02]], dtype=np.float32)
    mu_interp = interp1d(mu[:, 0], mu[:, 1])
    return mu_interp(E)


def mu_water(E):
    """ Return mass attenuation coefficients for liquid water based on NIST
    data.

    Parameters
    ----------
    E : ndarray
        Array of energies (units of MV)

    Returns
    -------
    ndarray
        Array of interpolated mass attenuation coefficients
    """
    mu = np.array([[1.00000E-03, 4.078E+03, 4.065E+03],
                   [1.50000E-03, 1.376E+03, 1.372E+03],
                   [2.00000E-03, 6.173E+02, 6.152E+02],
                   [3.00000E-03, 1.929E+02, 1.917E+02],
                   [4.00000E-03, 8.278E+01, 8.191E+01],
                   [5.00000E-03, 4.258E+01, 4.188E+01],
                   [6.00000E-03, 2.464E+01, 2.405E+01],
                   [8.00000E-03, 1.037E+01, 9.915E+00],
                   [1.00000E-02, 5.329E+00, 4.944E+00],
                   [1.50000E-02, 1.673E+00, 1.374E+00],
                   [2.00000E-02, 8.096E-01, 5.503E-01],
                   [3.00000E-02, 3.756E-01, 1.557E-01],
                   [4.00000E-02, 2.683E-01, 6.947E-02],
                   [5.00000E-02, 2.269E-01, 4.223E-02],
                   [6.00000E-02, 2.059E-01, 3.190E-02],
                   [8.00000E-02, 1.837E-01, 2.597E-02],
                   [1.00000E-01, 1.707E-01, 2.546E-02],
                   [1.50000E-01, 1.505E-01, 2.764E-02],
                   [2.00000E-01, 1.370E-01, 2.967E-02],
                   [3.00000E-01, 1.186E-01, 3.192E-02],
                   [4.00000E-01, 1.061E-01, 3.279E-02],
                   [5.00000E-01, 9.687E-02, 3.299E-02],
                   [6.00000E-01, 8.956E-02, 3.284E-02],
                   [8.00000E-01, 7.865E-02, 3.206E-02],
                   [1.00000E+00, 7.072E-02, 3.103E-02],
                   [1.25000E+00, 6.323E-02, 2.965E-02],
                   [1.50000E+00, 5.754E-02, 2.833E-02],
                   [2.00000E+00, 4.942E-02, 2.608E-02],
                   [3.00000E+00, 3.969E-02, 2.281E-02],
                   [4.00000E+00, 3.403E-02, 2.066E-02],
                   [5.00000E+00, 3.031E-02, 1.915E-02],
                   [6.00000E+00, 2.770E-02, 1.806E-02],
                   [8.00000E+00, 2.429E-02, 1.658E-02],
                   [1.00000E+01, 2.219E-02, 1.566E-02],
                   [1.50000E+01, 1.941E-02, 1.441E-02],
                   [2.00000E+01, 1.813E-02, 1.382E-02]], dtype=np.float32)
    mu_interp = interp1d(mu[:, 0], mu[:, 1])
    return mu_interp(E)
